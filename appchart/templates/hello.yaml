---
apiVersion: v1
kind: Service
metadata:
  name: hello-world
  namespace: {{ .Values.namespace }}
  #annotations:
  #  service.beta.kubernetes.io/aws-load-balancer-type: "alb"
  #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
  #   service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: hello-world
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
        - name: hello-world
          image: bernardjason/helloworld:1.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: hello-world
#   namespace: {{ .Values.namespace }}
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     kubernetes.io/ingress.scheme: internet-facing
#     kubernetes.io/ingress.target-type: ip
#     # nginx.ingress.kubernetes.io/aws-load-balancer-type: "nlb"
#     # nginx.ingress.kubernetes.io/aws-load-balancer-internal: "true"
# spec:
#   ingressClassName: nginx
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: hello-world
#             port:
#               number: 80

